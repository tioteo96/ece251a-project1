C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\student
                    -\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(
                    -2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\student\SimplicityStudio
                    -\v4_workspace\EFM8BB3_Voltmeter\inc\graphics;C:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter\inc;C:\Use
                    -rs\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter\inc\config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/
                    -8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2022A/conf
                    -ig;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/SiliconLabs/Si
                    -mplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;C:/SiliconLabs/SimplicityStudio/v4/devel
                    -oper/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4
                    -.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//ki
                    -ts/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/share
                    -d/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.l
                    -st) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              ADC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_3_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              SPI_0_enter_DefaultMode_from_RESET();
  37   1              UART_0_enter_DefaultMode_from_RESET();
  38   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  39   1              // Restore the SFRPAGE
  40   1              SFRPAGE = SFRPAGE_save;
  41   1              // [Config Calls]$
  42   1      
  43   1      }
  44          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 2   

  45          //================================================================================
  46          // WDT_0_enter_DefaultMode_from_RESET
  47          //================================================================================
  48          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  49   1              // $[WDTCN - Watchdog Timer Control]
  50   1              SFRPAGE = 0x00;
  51   1              //Disable Watchdog with key sequence
  52   1              WDTCN = 0xDE; //First key
  53   1              WDTCN = 0xAD; //Second key
  54   1              // [WDTCN - Watchdog Timer Control]$
  55   1      
  56   1      }
  57          
  58          //================================================================================
  59          // PORTS_0_enter_DefaultMode_from_RESET
  60          //================================================================================
  61          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  62   1              // $[P0 - Port 0 Pin Latch]
  63   1              // [P0 - Port 0 Pin Latch]$
  64   1      
  65   1              // $[P0MDOUT - Port 0 Output Mode]
  66   1              /***********************************************************************
  67   1               - P0.0 output is open-drain
  68   1               - P0.1 output is open-drain
  69   1               - P0.2 output is open-drain
  70   1               - P0.3 output is open-drain
  71   1               - P0.4 output is push-pull
  72   1               - P0.5 output is open-drain
  73   1               - P0.6 output is push-pull
  74   1               - P0.7 output is open-drain
  75   1               ***********************************************************************/
  76   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  77   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  78   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  79   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  80   1              // [P0MDOUT - Port 0 Output Mode]$
  81   1      
  82   1              // $[P0MDIN - Port 0 Input Mode]
  83   1              // [P0MDIN - Port 0 Input Mode]$
  84   1      
  85   1              // $[P0SKIP - Port 0 Skip]
  86   1              /***********************************************************************
  87   1               - P0.0 pin is skipped by the crossbar
  88   1               - P0.1 pin is skipped by the crossbar
  89   1               - P0.2 pin is skipped by the crossbar
  90   1               - P0.3 pin is skipped by the crossbar
  91   1               - P0.4 pin is not skipped by the crossbar
  92   1               - P0.5 pin is not skipped by the crossbar
  93   1               - P0.6 pin is not skipped by the crossbar
  94   1               - P0.7 pin is not skipped by the crossbar
  95   1               ***********************************************************************/
  96   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  97   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
  98   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
  99   1                              | P0SKIP_B7__NOT_SKIPPED;
 100   1              // [P0SKIP - Port 0 Skip]$
 101   1      
 102   1              // $[P0MASK - Port 0 Mask]
 103   1              /***********************************************************************
 104   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 105   1               event
 106   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 107   1               event
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 3   

 108   1               - P0.2 pin logic value is compared to P0MAT.2
 109   1               - P0.3 pin logic value is ignored and will not cause a port mismatch
 110   1               event
 111   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 112   1               event
 113   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 114   1               event
 115   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 116   1               event
 117   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 118   1               event
 119   1               ***********************************************************************/
 120   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 121   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 122   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 123   1              // [P0MASK - Port 0 Mask]$
 124   1      
 125   1              // $[P0MAT - Port 0 Match]
 126   1              // [P0MAT - Port 0 Match]$
 127   1      
 128   1      }
 129          
 130          //================================================================================
 131          // PORTS_1_enter_DefaultMode_from_RESET
 132          //================================================================================
 133          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 134   1              // $[P1 - Port 1 Pin Latch]
 135   1              // [P1 - Port 1 Pin Latch]$
 136   1      
 137   1              // $[P1MDOUT - Port 1 Output Mode]
 138   1              /***********************************************************************
 139   1               - P1.0 output is push-pull
 140   1               - P1.1 output is open-drain
 141   1               - P1.2 output is open-drain
 142   1               - P1.3 output is open-drain
 143   1               - P1.4 output is push-pull
 144   1               - P1.5 output is push-pull
 145   1               - P1.6 output is push-pull
 146   1               - P1.7 output is open-drain
 147   1               ***********************************************************************/
 148   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 149   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 150   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 151   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 152   1              // [P1MDOUT - Port 1 Output Mode]$
 153   1      
 154   1              // $[P1MDIN - Port 1 Input Mode]
 155   1              /***********************************************************************
 156   1               - P1.0 pin is configured for digital mode
 157   1               - P1.1 pin is configured for analog mode
 158   1               - P1.2 pin is configured for digital mode
 159   1               - P1.3 pin is configured for digital mode
 160   1               - P1.4 pin is configured for digital mode
 161   1               - P1.5 pin is configured for digital mode
 162   1               - P1.6 pin is configured for digital mode
 163   1               - P1.7 pin is configured for analog mode
 164   1               ***********************************************************************/
 165   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 166   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 167   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 168   1              // [P1MDIN - Port 1 Input Mode]$
 169   1      
 170   1              // $[P1SKIP - Port 1 Skip]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 4   

 171   1              /***********************************************************************
 172   1               - P1.0 pin is not skipped by the crossbar
 173   1               - P1.1 pin is skipped by the crossbar
 174   1               - P1.2 pin is skipped by the crossbar
 175   1               - P1.3 pin is skipped by the crossbar
 176   1               - P1.4 pin is not skipped by the crossbar
 177   1               - P1.5 pin is not skipped by the crossbar
 178   1               - P1.6 pin is not skipped by the crossbar
 179   1               - P1.7 pin is skipped by the crossbar
 180   1               ***********************************************************************/
 181   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 182   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 183   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 184   1                              | P1SKIP_B7__SKIPPED;
 185   1              // [P1SKIP - Port 1 Skip]$
 186   1      
 187   1              // $[P1MASK - Port 1 Mask]
 188   1              // [P1MASK - Port 1 Mask]$
 189   1      
 190   1              // $[P1MAT - Port 1 Match]
 191   1              // [P1MAT - Port 1 Match]$
 192   1      
 193   1      }
 194          
 195          //================================================================================
 196          // PORTS_2_enter_DefaultMode_from_RESET
 197          //================================================================================
 198          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 199   1              // $[P2 - Port 2 Pin Latch]
 200   1              // [P2 - Port 2 Pin Latch]$
 201   1      
 202   1              // $[P2MDOUT - Port 2 Output Mode]
 203   1              /***********************************************************************
 204   1               - P2.0 output is open-drain
 205   1               - P2.1 output is open-drain
 206   1               - P2.2 output is open-drain
 207   1               - P2.3 output is push-pull
 208   1               - P2.4 output is open-drain
 209   1               - P2.5 output is open-drain
 210   1               - P2.6 output is push-pull
 211   1               ***********************************************************************/
 212   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 213   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 214   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 215   1                              | P2MDOUT_B6__PUSH_PULL;
 216   1              // [P2MDOUT - Port 2 Output Mode]$
 217   1      
 218   1              // $[P2MDIN - Port 2 Input Mode]
 219   1              // [P2MDIN - Port 2 Input Mode]$
 220   1      
 221   1              // $[P2SKIP - Port 2 Skip]
 222   1              /***********************************************************************
 223   1               - P2.0 pin is not skipped by the crossbar
 224   1               - P2.1 pin is not skipped by the crossbar
 225   1               - P2.2 pin is not skipped by the crossbar
 226   1               - P2.3 pin is skipped by the crossbar
 227   1               ***********************************************************************/
 228   1              SFRPAGE = 0x20;
 229   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 230   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 231   1              // [P2SKIP - Port 2 Skip]$
 232   1      
 233   1              // $[P2MASK - Port 2 Mask]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 5   

 234   1              // [P2MASK - Port 2 Mask]$
 235   1      
 236   1              // $[P2MAT - Port 2 Match]
 237   1              // [P2MAT - Port 2 Match]$
 238   1      
 239   1      }
 240          
 241          //================================================================================
 242          // PBCFG_0_enter_DefaultMode_from_RESET
 243          //================================================================================
 244          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 245   1              // $[XBR2 - Port I/O Crossbar 2]
 246   1              /***********************************************************************
 247   1               - Weak Pullups enabled 
 248   1               - Crossbar enabled
 249   1               - UART1 I/O unavailable at Port pin
 250   1               - UART1 RTS1 unavailable at Port pin
 251   1               - UART1 CTS1 unavailable at Port pin
 252   1               ***********************************************************************/
 253   1              SFRPAGE = 0x00;
 254   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 255   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 256   1                              | XBR2_URT1CTSE__DISABLED;
 257   1              // [XBR2 - Port I/O Crossbar 2]$
 258   1      
 259   1              // $[PRTDRV - Port Drive Strength]
 260   1              // [PRTDRV - Port Drive Strength]$
 261   1      
 262   1              // $[XBR0 - Port I/O Crossbar 0]
 263   1              /***********************************************************************
 264   1               - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 265   1               - SPI I/O routed to Port pins
 266   1               - SMBus 0 I/O unavailable at Port pins
 267   1               - CP0 unavailable at Port pin
 268   1               - Asynchronous CP0 unavailable at Port pin
 269   1               - CP1 unavailable at Port pin
 270   1               - Asynchronous CP1 unavailable at Port pin
 271   1               - SYSCLK unavailable at Port pin
 272   1               ***********************************************************************/
 273   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 274   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 275   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 276   1              // [XBR0 - Port I/O Crossbar 0]$
 277   1      
 278   1              // $[XBR1 - Port I/O Crossbar 1]
 279   1              /***********************************************************************
 280   1               - CEX0, CEX1, CEX2 routed to Port pins
 281   1               - ECI unavailable at Port pin
 282   1               - T0 unavailable at Port pin
 283   1               - T1 unavailable at Port pin
 284   1               - T2 unavailable at Port pin
 285   1               ***********************************************************************/
 286   1              XBR1 = XBR1_PCA0ME__CEX0_TO_CEX2 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 287   1                              | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 288   1              // [XBR1 - Port I/O Crossbar 1]$
 289   1      
 290   1      }
 291          
 292          //================================================================================
 293          // ADC_0_enter_DefaultMode_from_RESET
 294          //================================================================================
 295          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 296   1              // $[ADC0CN2 - ADC0 Control 2]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 6   

 297   1              /***********************************************************************
 298   1               - ADC0 conversion initiated on overflow of Timer 0
 299   1               - The ADC accumulator is over-written with the results of any conversion
 300   1               ***********************************************************************/
 301   1              ADC0CN2 = ADC0CN2_ADCM__TIMER0 | ADC0CN2_PACEN__PAC_DISABLED;
 302   1              // [ADC0CN2 - ADC0 Control 2]$
 303   1      
 304   1              // $[ADC0CN1 - ADC0 Control 1]
 305   1              // [ADC0CN1 - ADC0 Control 1]$
 306   1      
 307   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 308   1              /***********************************************************************
 309   1               - Select ADC0.13
 310   1               ***********************************************************************/
 311   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 312   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 313   1      
 314   1              // $[ADC0CF2 - ADC0 Power Control]
 315   1              /***********************************************************************
 316   1               - The ADC0 ground reference is the GND pin
 317   1               - The ADC0 voltage reference is the VDD pin
 318   1               - Power Up Delay Time = 0x1F
 319   1               ***********************************************************************/
 320   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 321   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 322   1              // [ADC0CF2 - ADC0 Power Control]$
 323   1      
 324   1              // $[ADC0CF0 - ADC0 Configuration]
 325   1              /***********************************************************************
 326   1               - ADCCLK = SYSCLK
 327   1               - SAR Clock Divider = 0x01
 328   1               ***********************************************************************/
 329   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 330   1              // [ADC0CF0 - ADC0 Configuration]$
 331   1      
 332   1              // $[ADC0CF1 - ADC0 Configuration]
 333   1              /***********************************************************************
 334   1               - Enable low power mode
 335   1               - Conversion Tracking Time = 0x01
 336   1               ***********************************************************************/
 337   1              ADC0CF1 = ADC0CF1_ADLPM__LP_ENABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 338   1              // [ADC0CF1 - ADC0 Configuration]$
 339   1      
 340   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 341   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 342   1      
 343   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 344   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 345   1      
 346   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 347   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 348   1      
 349   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 350   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 351   1      
 352   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 353   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 354   1      
 355   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 356   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 357   1      
 358   1              // $[ADC0CN0 - ADC0 Control 0]
 359   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 7   

 360   1               - Enable ADC0 
 361   1               ***********************************************************************/
 362   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 363   1              // [ADC0CN0 - ADC0 Control 0]$
 364   1      
 365   1      }
 366          
 367          //================================================================================
 368          // CLOCK_0_enter_DefaultMode_from_RESET
 369          //================================================================================
 370          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 371   1              // $[HFOSC1 Setup]
 372   1              // [HFOSC1 Setup]$
 373   1      
 374   1              // $[CLKSEL - Clock Select]
 375   1              /***********************************************************************
 376   1               - Clock derived from the Internal High Frequency Oscillator 0
 377   1               - SYSCLK is equal to selected clock source divided by 1
 378   1               ***********************************************************************/
 379   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 380   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 381   1                      ;
 382   1              // [CLKSEL - Clock Select]$
 383   1      
 384   1      }
 385          
 386          //================================================================================
 387          // TIMER01_0_enter_DefaultMode_from_RESET
 388          //================================================================================
 389          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 390   1              // $[Timer Initialization]
 391   1              //Save Timer Configuration
 392   1              uint8_t TCON_save;
 393   1              TCON_save = TCON;
 394   1              //Stop Timers
 395   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 396   1      
 397   1              // [Timer Initialization]$
 398   1      
 399   1              // $[TH0 - Timer 0 High Byte]
 400   1              /***********************************************************************
 401   1               - Timer 0 High Byte = 0x01
 402   1               ***********************************************************************/
 403   1              TH0 = (0x01 << TH0_TH0__SHIFT);
 404   1              // [TH0 - Timer 0 High Byte]$
 405   1      
 406   1              // $[TL0 - Timer 0 Low Byte]
 407   1              // [TL0 - Timer 0 Low Byte]$
 408   1      
 409   1              // $[TH1 - Timer 1 High Byte]
 410   1              /***********************************************************************
 411   1               - Timer 1 High Byte = 0x96
 412   1               ***********************************************************************/
 413   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 414   1              // [TH1 - Timer 1 High Byte]$
 415   1      
 416   1              // $[TL1 - Timer 1 Low Byte]
 417   1              // [TL1 - Timer 1 Low Byte]$
 418   1      
 419   1              // $[Timer Restoration]
 420   1              //Restore Timer Configuration
 421   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 422   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 8   

 423   1              // [Timer Restoration]$
 424   1      
 425   1      }
 426          
 427          //================================================================================
 428          // TIMER16_3_enter_DefaultMode_from_RESET
 429          //================================================================================
 430          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 431   1              // $[Timer Initialization]
 432   1              // Save Timer Configuration
 433   1              uint8_t TMR3CN0_TR3_save;
 434   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 435   1              // Stop Timer
 436   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 437   1              // [Timer Initialization]$
 438   1      
 439   1              // $[TMR3CN1 - Timer 3 Control 1]
 440   1              // [TMR3CN1 - Timer 3 Control 1]$
 441   1      
 442   1              // $[TMR3CN0 - Timer 3 Control]
 443   1              // [TMR3CN0 - Timer 3 Control]$
 444   1      
 445   1              // $[TMR3H - Timer 3 High Byte]
 446   1              /***********************************************************************
 447   1               - Timer 3 High Byte = 0xF8
 448   1               ***********************************************************************/
 449   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 450   1              // [TMR3H - Timer 3 High Byte]$
 451   1      
 452   1              // $[TMR3L - Timer 3 Low Byte]
 453   1              /***********************************************************************
 454   1               - Timer 3 Low Byte = 0x06
 455   1               ***********************************************************************/
 456   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 457   1              // [TMR3L - Timer 3 Low Byte]$
 458   1      
 459   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 460   1              /***********************************************************************
 461   1               - Timer 3 Reload High Byte = 0xF8
 462   1               ***********************************************************************/
 463   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 464   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 465   1      
 466   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 467   1              /***********************************************************************
 468   1               - Timer 3 Reload Low Byte = 0x06
 469   1               ***********************************************************************/
 470   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 471   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 472   1      
 473   1              // $[TMR3CN0]
 474   1              /***********************************************************************
 475   1               - Start Timer 3 running
 476   1               ***********************************************************************/
 477   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 478   1              // [TMR3CN0]$
 479   1      
 480   1              // $[Timer Restoration]
 481   1              // Restore Timer Configuration
 482   1              TMR3CN0 |= TMR3CN0_TR3_save;
 483   1              // [Timer Restoration]$
 484   1      
 485   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 9   

 486          
 487          //================================================================================
 488          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 489          //================================================================================
 490          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 491   1              // $[CKCON0 - Clock Control 0]
 492   1              /***********************************************************************
 493   1               - System clock divided by 48
 494   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 495   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 496   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 497   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 498   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 499   1               - Timer 1 uses the system clock
 500   1               ***********************************************************************/
 501   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 502   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 503   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 504   1                              | CKCON0_T1M__SYSCLK;
 505   1              // [CKCON0 - Clock Control 0]$
 506   1      
 507   1              // $[CKCON1 - Clock Control 1]
 508   1              // [CKCON1 - Clock Control 1]$
 509   1      
 510   1              // $[TMOD - Timer 0/1 Mode]
 511   1              /***********************************************************************
 512   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 513   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 514   1               - Timer Mode
 515   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 516   1               - Timer Mode
 517   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 518   1               ***********************************************************************/
 519   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 520   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 521   1              // [TMOD - Timer 0/1 Mode]$
 522   1      
 523   1              // $[TCON - Timer 0/1 Control]
 524   1              /***********************************************************************
 525   1               - Start Timer 0 running
 526   1               - Start Timer 1 running
 527   1               ***********************************************************************/
 528   1              TCON |= TCON_TR0__RUN | TCON_TR1__RUN;
 529   1              // [TCON - Timer 0/1 Control]$
 530   1      
 531   1      }
 532          
 533          //================================================================================
 534          // SPI_0_enter_DefaultMode_from_RESET
 535          //================================================================================
 536          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 537   1              // $[SPI0CKR - SPI0 Clock Rate]
 538   1              /***********************************************************************
 539   1               - SPI0 Clock Rate = 0x0B
 540   1               ***********************************************************************/
 541   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 542   1              // [SPI0CKR - SPI0 Clock Rate]$
 543   1      
 544   1              // $[SPI0CFG - SPI0 Configuration]
 545   1              /***********************************************************************
 546   1               - Enable master mode. Operate as a master
 547   1               ***********************************************************************/
 548   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 10  

 549   1              // [SPI0CFG - SPI0 Configuration]$
 550   1      
 551   1              // $[SPI0PCF - SPI0 Pin Configuration]
 552   1              // [SPI0PCF - SPI0 Pin Configuration]$
 553   1      
 554   1              // $[SPI0CN0 - SPI0 Control]
 555   1              /***********************************************************************
 556   1               - Enable the SPI module
 557   1               - 3-Wire Slave or 3-Wire Master Mode
 558   1               ***********************************************************************/
 559   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 560   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 561   1              // [SPI0CN0 - SPI0 Control]$
 562   1      
 563   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 564   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 565   1      
 566   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 567   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 568   1      
 569   1      }
 570          
 571          //================================================================================
 572          // INTERRUPT_0_enter_DefaultMode_from_RESET
 573          //================================================================================
 574          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 575   1              // $[EIE1 - Extended Interrupt Enable 1]
 576   1              /***********************************************************************
 577   1               - Enable interrupt requests generated by the ADINT flag
 578   1               - Disable ADC0 Window Comparison interrupt
 579   1               - Disable CP0 interrupts
 580   1               - Disable CP1 interrupts
 581   1               - Enable interrupt requests generated by a Port Match
 582   1               - Disable all PCA0 interrupts
 583   1               - Disable all SMB0 interrupts
 584   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 585   1               ***********************************************************************/
 586   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 587   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 588   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 589   1              // [EIE1 - Extended Interrupt Enable 1]$
 590   1      
 591   1              // $[EIE2 - Extended Interrupt Enable 2]
 592   1              // [EIE2 - Extended Interrupt Enable 2]$
 593   1      
 594   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 595   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 596   1      
 597   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 598   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 599   1      
 600   1              // $[EIP2 - Extended Interrupt Priority 2]
 601   1              // [EIP2 - Extended Interrupt Priority 2]$
 602   1      
 603   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 604   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 605   1      
 606   1              // $[IE - Interrupt Enable]
 607   1              /***********************************************************************
 608   1               - Disable all interrupt sources
 609   1               - Disable external interrupt 0
 610   1               - Disable external interrupt 1
 611   1               - Enable interrupt requests generated by SPI0
C51 COMPILER V9.53.0.0   INITDEVICE                                                        05/08/2017 21:56:41 PAGE 11  

 612   1               - Disable all Timer 0 interrupt
 613   1               - Disable all Timer 1 interrupt
 614   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 615   1               - Disable UART0 interrupt
 616   1               ***********************************************************************/
 617   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 618   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 619   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 620   1              // [IE - Interrupt Enable]$
 621   1      
 622   1              // $[IP - Interrupt Priority]
 623   1              // [IP - Interrupt Priority]$
 624   1      
 625   1              // $[IPH - Interrupt Priority High]
 626   1              // [IPH - Interrupt Priority High]$
 627   1      
 628   1      }
 629          
 630          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 631   1              // $[SCON0 - UART0 Serial Port Control]
 632   1              /***********************************************************************
 633   1               - UART0 reception enabled
 634   1               ***********************************************************************/
 635   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 636   1              // [SCON0 - UART0 Serial Port Control]$
 637   1      
 638   1      }
 639          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    208    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
