C51 COMPILER V9.53.0.0   TICK                                                              05/08/2017 21:56:41 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE TICK
OBJECT MODULE PLACED IN .\lib\efm8bb3\bsp\efm8_memory_lcd\src\source\tick.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\SiliconLabs\S
                    -implicityStudio\v4\developer\sdks\8051\v4.0.3\Device\EFM8BB3\bsp\efm8_memory_lcd\source\tick.c OMF2 SMALL DEBUG OBJECTEX
                    -TEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\U
                    -sers\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter\inc\graphics;C:\Users\student\SimplicityStudio\v4_workspace
                    -\EFM8BB3_Voltmeter\inc;C:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter\inc\config;C:/SiliconLabs/Simpli
                    -cityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3/
                    -/kits/EFM8BB3_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral
                    -_driver/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;C:/SiliconL
                    -abs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStu
                    -dio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/d
                    -eveloper/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/s
                    -dks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/
                    -inc) PRINT(.\lib\efm8bb3\bsp\efm8_memory_lcd\src\source\tick.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\lib\efm8bb
                    -3\bsp\efm8_memory_lcd\src\source\tick.OBJ)

line level    source

   1          /**************************************************************************//**
   2           * Copyright (c) 2015 by Silicon Laboratories Inc. All rights reserved.
   3           *
   4           * http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   5           *****************************************************************************/
   6          /////////////////////////////////////////////////////////////////////////////
   7          // Tick.c
   8          /////////////////////////////////////////////////////////////////////////////
   9          
  10          /////////////////////////////////////////////////////////////////////////////
  11          // Includes
  12          /////////////////////////////////////////////////////////////////////////////
  13          
  14          #include "bsp.h"
  15          #include "tick.h"
  16          
  17          /////////////////////////////////////////////////////////////////////////////
  18          // Globals
  19          /////////////////////////////////////////////////////////////////////////////
  20          
  21          static volatile uint16_t Ticks = 0;
  22          
  23          /////////////////////////////////////////////////////////////////////////////
  24          // Functions
  25          /////////////////////////////////////////////////////////////////////////////
  26          
  27          //---------------------------------------------------------------------------
  28          // GetTickCount
  29          //---------------------------------------------------------------------------
  30          //
  31          // Description - Return the system up time in milliseconds
  32          //
  33          // return - Number of milliseconds since system start.
  34          //
  35          uint16_t GetTickCount()
  36          {
  37   1          uint16_t ticks;
  38   1          uint8_t save_page = SFRPAGE;
  39   1      
  40   1          // Disable Timer 3 interrupts
  41   1          SFRPAGE = 0x10;
  42   1          EIE1 &= ~EIE1_ET3__BMASK;
  43   1      
C51 COMPILER V9.53.0.0   TICK                                                              05/08/2017 21:56:41 PAGE 2   

  44   1          ticks = Ticks;
  45   1      
  46   1          // Enable Timer 3 interrupts
  47   1          EIE1 |= EIE1_ET3__BMASK;
  48   1          SFRPAGE = save_page;
  49   1      
  50   1          return ticks;
  51   1      }
  52          
  53          //---------------------------------------------------------------------------
  54          // Wait
  55          //---------------------------------------------------------------------------
  56          //
  57          // Description - Wait the specified number of milliseconds
  58          //
  59          // ms - The number of milliseconds to wait
  60          //
  61          void Wait(uint16_t ms)
  62          {
  63   1          uint16_t ticks = GetTickCount();
  64   1      
  65   1          while ((GetTickCount() - ticks) < ms);
  66   1      }
  67          
  68          //-----------------------------------------------------------------------------
  69          // TIMER3_ISR
  70          //-----------------------------------------------------------------------------
  71          //
  72          // TIMER3 ISR Content goes here. Remember to clear flag bits:
  73          // TMR3CN::TF3H (Timer # High Byte Overflow Flag)
  74          // TMR3CN::TF3L (Timer # Low Byte Overflow Flag)
  75          //
  76          // SFRPAGE automatically pushed/popped and set to 0x10
  77          //
  78          //-----------------------------------------------------------------------------
  79          SI_INTERRUPT (TIMER3_ISR, TIMER3_IRQn)
  80          {
  81   1          // Overflows every 1 ms
  82   1          TMR3CN0 &= ~TMR3CN0_TF3H__BMASK;
  83   1      
  84   1          Ticks++;
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     72    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
