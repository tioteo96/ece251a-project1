C51 COMPILER V9.53.0.0   ALU_MAIN                                                          03/31/2017 18:17:57 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ALU_MAIN
OBJECT MODULE PLACED IN .\src\ALU_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\Cys05\S
                    -implicityStudio\v4_workspace\ALU\src\ALU_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) O
                    -PTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/Users/Cys05/SimplicityStudio/v4_workspace/ALU/in
                    -c;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudi
                    -o/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\ALU_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT
                    -(.\src\ALU_main.OBJ)

line level    source

   1          
   2          #include <SI_EFM8BB3_Register_Enums.h>
   3          #include "InitDevice.h"
   4          
   5          void null (void);
   6          void red (void);
   7          void blue (void);
   8          void green (void);
   9          void all (void);
  10          void binarynum (int);  //input number
  11          void binaryopt (int);  //3:add//2:OR//1:AND//0:ALL 0
  12          void clockpulse (void);
  13          
  14          extern void WDT_0_enter_DefaultMode_from_RESET(void);
  15          void delay (void);
  16          
  17          int num;
  18          int opt;
  19          int clk;
  20          int i;
  21          
  22          SI_SBIT(N0, SFR_P1, 0);
  23          SI_SBIT(N1, SFR_P1, 1);
  24          SI_SBIT(N2, SFR_P1, 2);
  25          SI_SBIT(N3, SFR_P1, 3);
  26          
  27          
  28          
  29          
  30          int main(void) {
  31   1      
  32   1              enter_DefaultMode_from_RESET();
  33   1              WDT_0_enter_DefaultMode_from_RESET();
  34   1      
  35   1              XBR2 |= 0x40;
  36   1              //P0 = 0;
  37   1              //P1 = 0;
  38   1              //P2 = 0;
  39   1              //P3 = 0;
  40   1      
  41   1              while (1) {
  42   2      
  43   2                      null();
  44   2                      binaryopt(3);
  45   2                      binarynum(1);
  46   2                      if(P0_B3 == 0){
  47   3                              P0_B7 = 1;
  48   3                      }
  49   2                      else{
  50   3                              P0_B7 = 0;
  51   3                      }
C51 COMPILER V9.53.0.0   ALU_MAIN                                                          03/31/2017 18:17:57 PAGE 2   

  52   2              }
  53   1      }
  54          
  55          void null (void){
  56   1              P1_B4 = 1; P1_B5 = 1; P1_B6 = 1;
  57   1      }
  58          void red (void){
  59   1              P1_B4 = 1; P1_B5 = 1; P1_B6 = 0;
  60   1      }
  61          void blue (void){
  62   1              P1_B4 = 1; P1_B5 = 0; P1_B6 = 1;
  63   1      }
  64          void green (void){
  65   1              P1_B4 = 0; P1_B5 = 1; P1_B6 = 1;
  66   1      }
  67          void all (void){
  68   1              P1_B4 = 0; P1_B5 = 0; P1_B6 = 0;
  69   1      }
  70          
  71          void delay (void){
  72   1              for(i = 0; i < 30000; i++){
  73   2      
  74   2              }
  75   1      }
  76          
  77          void binarynum (int a){
  78   1              switch(a){
  79   2              case 0:
  80   2                      P1_B0 = 0; N1 = 0; N2 = 0; N3 = 0;
  81   2                  break;
  82   2              case 1:
  83   2                      P1_B0 = 0; N1 = 0; N2 = 0; N3 = 1;
  84   2                      break;
  85   2              case 2:
  86   2                      P1_B0 = 0; N1 = 0; N2 = 1; N3 = 0;
  87   2                      break;
  88   2              case 3:
  89   2                      P1_B0 = 0; N1 = 0; N2 = 1; N3 = 1;
  90   2                      break;
  91   2              case 4:
  92   2                      P1_B0 = 0; N1 = 1; N2 = 0; N3 = 0;
  93   2                      break;
  94   2              case 5:
  95   2                      P1_B0 = 0; N1 = 1; N2 = 0; N3 = 1;
  96   2                      break;
  97   2              case 6:
  98   2                      P1_B0 = 0; N1 = 1; N2 = 1; N3 = 0;
  99   2                      break;
 100   2              case 7:
 101   2                      P1_B0 = 0; N1 = 1; N2 = 1; N3 = 1;
 102   2                      break;
 103   2              case 8:
 104   2                      P1_B0 = 1; N1 = 0; N2 = 0; N3 = 0;
 105   2                      break;
 106   2              case 9:
 107   2                      P1_B0 = 1; N1 = 0; N2 = 0; N3 = 1;
 108   2                      break;
 109   2              case 10:
 110   2                      P1_B0 = 1; N1 = 0; N2 = 1; N3 = 0;
 111   2                      break;
 112   2              case 11:
 113   2                      P1_B0 = 1; N1 = 0; N2 = 1; N3 = 1;
 114   2                      break;
C51 COMPILER V9.53.0.0   ALU_MAIN                                                          03/31/2017 18:17:57 PAGE 3   

 115   2              case 12:
 116   2                      P1_B0 = 1; N1 = 1; N2 = 0; N3 = 0;
 117   2                      break;
 118   2              case 13:
 119   2                      P1_B0 = 1; N1 = 1; N2 = 0; N3 = 1;
 120   2                      break;
 121   2              case 14:
 122   2                      P1_B0 = 1; N1 = 1; N2 = 1; N3 = 0;
 123   2                      break;
 124   2              case 15:
 125   2                      P1_B0 = 1; N1 = 1; N2 = 1; N3 = 1;
 126   2                      break;
 127   2              }
 128   1      }
 129          
 130          void binaryopt (int b){
 131   1              switch(b){
 132   2              case 0:
 133   2                      P0_B0 = 0; P0_B1 = 0;
 134   2                      break;
 135   2              case 1:
 136   2                      P0_B0 = 0; P0_B1 = 1;
 137   2                      break;
 138   2              case 2:
 139   2                      P0_B0 = 1; P0_B1 = 0;
 140   2                      break;
 141   2              case 3:
 142   2                      P0_B0 = 1; P0_B1 = 1;
 143   2                      break;
 144   2              }
 145   1      }
 146          
 147          void clockpulse (void){
 148   1              P0_B7 = 1;
 149   1              delay();
 150   1              P0_B7 = 0;
 151   1      }
 152          
 153          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
 154   1              // $[WDTCN - Watchdog Timer Control]
 155   1              SFRPAGE = 0x00;
 156   1              //Disable Watchdog with key sequence
 157   1              WDTCN = 0xDE; //First key
 158   1              WDTCN = 0xAD; //Second key
 159   1              // [WDTCN - Watchdog Timer Control]$
 160   1      
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    311    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
