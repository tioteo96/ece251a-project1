C51 COMPILER V9.53.0.0   INTERRUPTS                                                        04/24/2017 15:48:43 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\student
                    -\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_2\src\Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLE
                    -VEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\student\SimplicitySt
                    -udio\v4_workspace\EFM8BB3_Voltmeter_3_2\inc\graphics;C:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_
                    -2\inc;C:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_2\inc\config;C:/SiliconLabs/SimplicityStudio/v4
                    -/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3
                    -_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C
                    -:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;C:/SiliconLabs/Simplicit
                    -yStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/develo
                    -per/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks
                    -/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0
                    -.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\
                    -src\Interrupts.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interrupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          
  12          //-----------------------------------------------------------------------------
  13          // Global Constants
  14          //-----------------------------------------------------------------------------
  15          // Configurator set for HFOSC0/8
  16          #define SYSCLK             3062000
  17          
  18          // Configurator set for timer overflow every 100 ms / 10 Hz.
  19          #define LED_TOGGLE_RATE           100  // LED toggle rate in milliseconds
  20          // if LED_TOGGLE_RATE = 1, the LED will
  21          // be on for 1 millisecond and off for
  22          // 1 millisecond
  23          
  24          //-----------------------------------------------------------------------------
  25          // Pin Declarations
  26          //-----------------------------------------------------------------------------
  27          SI_SBIT (LED_GREEN, SFR_P1, 4);// green LED
  28          SI_SBIT (LED_BLUE, SFR_P1, 5);// blue LED
  29          SI_SBIT(LED_RED, SFR_P1, 6);// red LED
  30          
  31          //-----------------------------------------------------------------------------
  32          // INT0_ISR
  33          //-----------------------------------------------------------------------------
  34          //
  35          // INT0 ISR Content goes here. Remember to clear flag bits:
  36          // TCON::IE0 (External Interrupt 0)
  37          //
  38          // Whenever a negative edge appears on P0.2, toggle LED_GREEN.
  39          // The interrupt pending flag is automatically cleared by vectoring to the ISR
  40          //
  41          //-----------------------------------------------------------------------------
  42          /*SI_INTERRUPT (INT0_ISR, INT0_IRQn)
  43          {
  44                  LED_GREEN = !LED_GREEN;
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        04/24/2017 15:48:43 PAGE 2   

  45          }*/
  46          
  47          //-----------------------------------------------------------------------------
  48          // INT1_ISR
  49          //-----------------------------------------------------------------------------
  50          //
  51          // INT1 ISR Content goes here. Remember to clear flag bits:
  52          // TCON::IE1 (External Interrupt 1)
  53          //
  54          // Whenever a negative edge appears on P0.3, toggle LED_BLUE.
  55          // The interrupt pending flag is automatically cleared by vectoring to the ISR
  56          //
  57          //-----------------------------------------------------------------------------
  58          /*SI_INTERRUPT (INT1_ISR, INT1_IRQn)
  59          {
  60                  LED_BLUE = !LED_BLUE;
  61          }*/
  62          
  63          //-----------------------------------------------------------------------------
  64          // TIMER0_ISR
  65          //-----------------------------------------------------------------------------
  66          //
  67          // TIMER0 ISR Content goes here. Remember to clear flag bits:
  68          // TCON::TF0 (Timer 0 Overflow Flag)
  69          //
  70          // Here we process the Timer0 interrupt and toggle the LED when appropriate
  71          //
  72          //-----------------------------------------------------------------------------
  73          /*static uint16_t timer = 0;
  74          
  75          SI_INTERRUPT (TIMER0_ISR, TIMER0_IRQn)
  76          {
  77                  static uint16_t counter = 0;
  78          
  79                  counter++;
  80          
  81                  if(counter == LED_TOGGLE_RATE)
  82                  {
  83                          LED_RED = !LED_RED;                    // Toggle the LED
  84                          timer++;
  85                          counter = 0;
  86                  }
  87          }*/
  88          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
