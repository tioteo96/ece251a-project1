C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\student
                    -\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_2\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLE
                    -VEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\student\SimplicitySt
                    -udio\v4_workspace\EFM8BB3_Voltmeter_3_2\inc\graphics;C:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_
                    -2\inc;C:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_2\inc\config;C:/SiliconLabs/SimplicityStudio/v4
                    -/developer/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3
                    -_SLSTK2022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C
                    -:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;C:/SiliconLabs/Simplicit
                    -yStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/develo
                    -per/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks
                    -/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0
                    -.3//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\
                    -src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              RSTSRC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_3_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              SPI_0_enter_DefaultMode_from_RESET();
  37   1              EXTINT_0_enter_DefaultMode_from_RESET();
  38   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  39   1              // Restore the SFRPAGE
  40   1              SFRPAGE = SFRPAGE_save;
  41   1              // [Config Calls]$
  42   1      
  43   1      }
  44          
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 2   

  45          //================================================================================
  46          // WDT_0_enter_DefaultMode_from_RESET
  47          //================================================================================
  48          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  49   1              // $[WDTCN - Watchdog Timer Control]
  50   1              SFRPAGE = 0x00;
  51   1              //Disable Watchdog with key sequence
  52   1              WDTCN = 0xDE; //First key
  53   1              WDTCN = 0xAD; //Second key
  54   1              // [WDTCN - Watchdog Timer Control]$
  55   1      
  56   1      }
  57          
  58          //================================================================================
  59          // PORTS_0_enter_DefaultMode_from_RESET
  60          //================================================================================
  61          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  62   1              // $[P0 - Port 0 Pin Latch]
  63   1              // [P0 - Port 0 Pin Latch]$
  64   1      
  65   1              // $[P0MDOUT - Port 0 Output Mode]
  66   1              /***********************************************************************
  67   1               - P0.0 output is open-drain
  68   1               - P0.1 output is open-drain
  69   1               - P0.2 output is open-drain
  70   1               - P0.3 output is open-drain
  71   1               - P0.4 output is open-drain
  72   1               - P0.5 output is open-drain
  73   1               - P0.6 output is push-pull
  74   1               - P0.7 output is open-drain
  75   1               ***********************************************************************/
  76   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  77   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  78   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
  79   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
  80   1              // [P0MDOUT - Port 0 Output Mode]$
  81   1      
  82   1              // $[P0MDIN - Port 0 Input Mode]
  83   1              // [P0MDIN - Port 0 Input Mode]$
  84   1      
  85   1              // $[P0SKIP - Port 0 Skip]
  86   1              /***********************************************************************
  87   1               - P0.0 pin is skipped by the crossbar
  88   1               - P0.1 pin is skipped by the crossbar
  89   1               - P0.2 pin is skipped by the crossbar
  90   1               - P0.3 pin is skipped by the crossbar
  91   1               - P0.4 pin is skipped by the crossbar
  92   1               - P0.5 pin is skipped by the crossbar
  93   1               - P0.6 pin is not skipped by the crossbar
  94   1               - P0.7 pin is not skipped by the crossbar
  95   1               ***********************************************************************/
  96   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
  97   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
  98   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
  99   1              // [P0SKIP - Port 0 Skip]$
 100   1      
 101   1              // $[P0MASK - Port 0 Mask]
 102   1              /***********************************************************************
 103   1               - P0.0 pin logic value is ignored and will not cause a port mismatch
 104   1               event
 105   1               - P0.1 pin logic value is ignored and will not cause a port mismatch
 106   1               event
 107   1               - P0.2 pin logic value is compared to P0MAT.2
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 3   

 108   1               - P0.3 pin logic value is ignored and will not cause a port mismatch
 109   1               event
 110   1               - P0.4 pin logic value is ignored and will not cause a port mismatch
 111   1               event
 112   1               - P0.5 pin logic value is ignored and will not cause a port mismatch
 113   1               event
 114   1               - P0.6 pin logic value is ignored and will not cause a port mismatch
 115   1               event
 116   1               - P0.7 pin logic value is ignored and will not cause a port mismatch
 117   1               event
 118   1               ***********************************************************************/
 119   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__COMPARED
 120   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 121   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 122   1              // [P0MASK - Port 0 Mask]$
 123   1      
 124   1              // $[P0MAT - Port 0 Match]
 125   1              // [P0MAT - Port 0 Match]$
 126   1      
 127   1      }
 128          
 129          //================================================================================
 130          // PORTS_1_enter_DefaultMode_from_RESET
 131          //================================================================================
 132          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 133   1              // $[P1 - Port 1 Pin Latch]
 134   1              // [P1 - Port 1 Pin Latch]$
 135   1      
 136   1              // $[P1MDOUT - Port 1 Output Mode]
 137   1              /***********************************************************************
 138   1               - P1.0 output is push-pull
 139   1               - P1.1 output is open-drain
 140   1               - P1.2 output is open-drain
 141   1               - P1.3 output is open-drain
 142   1               - P1.4 output is push-pull
 143   1               - P1.5 output is push-pull
 144   1               - P1.6 output is push-pull
 145   1               - P1.7 output is open-drain
 146   1               ***********************************************************************/
 147   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 148   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 149   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
 150   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 151   1              // [P1MDOUT - Port 1 Output Mode]$
 152   1      
 153   1              // $[P1MDIN - Port 1 Input Mode]
 154   1              /***********************************************************************
 155   1               - P1.0 pin is configured for digital mode
 156   1               - P1.1 pin is configured for analog mode
 157   1               - P1.2 pin is configured for digital mode
 158   1               - P1.3 pin is configured for digital mode
 159   1               - P1.4 pin is configured for digital mode
 160   1               - P1.5 pin is configured for digital mode
 161   1               - P1.6 pin is configured for digital mode
 162   1               - P1.7 pin is configured for analog mode
 163   1               ***********************************************************************/
 164   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__DIGITAL
 165   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 166   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 167   1              // [P1MDIN - Port 1 Input Mode]$
 168   1      
 169   1              // $[P1SKIP - Port 1 Skip]
 170   1              /***********************************************************************
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 4   

 171   1               - P1.0 pin is not skipped by the crossbar
 172   1               - P1.1 pin is skipped by the crossbar
 173   1               - P1.2 pin is skipped by the crossbar
 174   1               - P1.3 pin is skipped by the crossbar
 175   1               - P1.4 pin is not skipped by the crossbar
 176   1               - P1.5 pin is not skipped by the crossbar
 177   1               - P1.6 pin is not skipped by the crossbar
 178   1               - P1.7 pin is skipped by the crossbar
 179   1               ***********************************************************************/
 180   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 181   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED
 182   1                              | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED
 183   1                              | P1SKIP_B7__SKIPPED;
 184   1              // [P1SKIP - Port 1 Skip]$
 185   1      
 186   1              // $[P1MASK - Port 1 Mask]
 187   1              // [P1MASK - Port 1 Mask]$
 188   1      
 189   1              // $[P1MAT - Port 1 Match]
 190   1              // [P1MAT - Port 1 Match]$
 191   1      
 192   1      }
 193          
 194          //================================================================================
 195          // PORTS_2_enter_DefaultMode_from_RESET
 196          //================================================================================
 197          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 198   1              // $[P2 - Port 2 Pin Latch]
 199   1              // [P2 - Port 2 Pin Latch]$
 200   1      
 201   1              // $[P2MDOUT - Port 2 Output Mode]
 202   1              /***********************************************************************
 203   1               - P2.0 output is open-drain
 204   1               - P2.1 output is open-drain
 205   1               - P2.2 output is open-drain
 206   1               - P2.3 output is push-pull
 207   1               - P2.4 output is open-drain
 208   1               - P2.5 output is open-drain
 209   1               - P2.6 output is push-pull
 210   1               ***********************************************************************/
 211   1              P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__OPEN_DRAIN
 212   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 213   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 214   1                              | P2MDOUT_B6__PUSH_PULL;
 215   1              // [P2MDOUT - Port 2 Output Mode]$
 216   1      
 217   1              // $[P2MDIN - Port 2 Input Mode]
 218   1              // [P2MDIN - Port 2 Input Mode]$
 219   1      
 220   1              // $[P2SKIP - Port 2 Skip]
 221   1              /***********************************************************************
 222   1               - P2.0 pin is not skipped by the crossbar
 223   1               - P2.1 pin is not skipped by the crossbar
 224   1               - P2.2 pin is not skipped by the crossbar
 225   1               - P2.3 pin is skipped by the crossbar
 226   1               ***********************************************************************/
 227   1              SFRPAGE = 0x20;
 228   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 229   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 230   1              // [P2SKIP - Port 2 Skip]$
 231   1      
 232   1              // $[P2MASK - Port 2 Mask]
 233   1              // [P2MASK - Port 2 Mask]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 5   

 234   1      
 235   1              // $[P2MAT - Port 2 Match]
 236   1              // [P2MAT - Port 2 Match]$
 237   1      
 238   1      }
 239          
 240          //================================================================================
 241          // PBCFG_0_enter_DefaultMode_from_RESET
 242          //================================================================================
 243          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 244   1              // $[XBR2 - Port I/O Crossbar 2]
 245   1              /***********************************************************************
 246   1               - Weak Pullups enabled 
 247   1               - Crossbar enabled
 248   1               - UART1 I/O unavailable at Port pin
 249   1               - UART1 RTS1 unavailable at Port pin
 250   1               - UART1 CTS1 unavailable at Port pin
 251   1               ***********************************************************************/
 252   1              SFRPAGE = 0x00;
 253   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 254   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 255   1                              | XBR2_URT1CTSE__DISABLED;
 256   1              // [XBR2 - Port I/O Crossbar 2]$
 257   1      
 258   1              // $[PRTDRV - Port Drive Strength]
 259   1              // [PRTDRV - Port Drive Strength]$
 260   1      
 261   1              // $[XBR0 - Port I/O Crossbar 0]
 262   1              /***********************************************************************
 263   1               - UART0 I/O unavailable at Port pin
 264   1               - SPI I/O routed to Port pins
 265   1               - SMBus 0 I/O unavailable at Port pins
 266   1               - CP0 unavailable at Port pin
 267   1               - Asynchronous CP0 unavailable at Port pin
 268   1               - CP1 unavailable at Port pin
 269   1               - Asynchronous CP1 unavailable at Port pin
 270   1               - SYSCLK unavailable at Port pin
 271   1               ***********************************************************************/
 272   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__DISABLED
 273   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 274   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 275   1              // [XBR0 - Port I/O Crossbar 0]$
 276   1      
 277   1              // $[XBR1 - Port I/O Crossbar 1]
 278   1              // [XBR1 - Port I/O Crossbar 1]$
 279   1      
 280   1      }
 281          
 282          //================================================================================
 283          // ADC_0_enter_DefaultMode_from_RESET
 284          //================================================================================
 285          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 286   1              // $[ADC0CN2 - ADC0 Control 2]
 287   1              /***********************************************************************
 288   1               - ADC0 conversion initiated on overflow of Timer 0
 289   1               - The ADC accumulator is over-written with the results of any conversion
 290   1               ***********************************************************************/
 291   1              ADC0CN2 = ADC0CN2_ADCM__TIMER0 | ADC0CN2_PACEN__PAC_DISABLED;
 292   1              // [ADC0CN2 - ADC0 Control 2]$
 293   1      
 294   1              // $[ADC0CN1 - ADC0 Control 1]
 295   1              // [ADC0CN1 - ADC0 Control 1]$
 296   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 6   

 297   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 298   1              /***********************************************************************
 299   1               - Select ADC0.13
 300   1               ***********************************************************************/
 301   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 302   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 303   1      
 304   1              // $[ADC0CF2 - ADC0 Power Control]
 305   1              /***********************************************************************
 306   1               - The ADC0 ground reference is the GND pin
 307   1               - The ADC0 voltage reference is the VDD pin
 308   1               - Power Up Delay Time = 0x1F
 309   1               ***********************************************************************/
 310   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 311   1                              | (0x1F << ADC0CF2_ADPWR__SHIFT);
 312   1              // [ADC0CF2 - ADC0 Power Control]$
 313   1      
 314   1              // $[ADC0CF0 - ADC0 Configuration]
 315   1              /***********************************************************************
 316   1               - ADCCLK = SYSCLK
 317   1               - SAR Clock Divider = 0x01
 318   1               ***********************************************************************/
 319   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 320   1              // [ADC0CF0 - ADC0 Configuration]$
 321   1      
 322   1              // $[ADC0CF1 - ADC0 Configuration]
 323   1              /***********************************************************************
 324   1               - Enable low power mode
 325   1               - Conversion Tracking Time = 0x01
 326   1               ***********************************************************************/
 327   1              ADC0CF1 = ADC0CF1_ADLPM__LP_ENABLED | (0x01 << ADC0CF1_ADTK__SHIFT);
 328   1              // [ADC0CF1 - ADC0 Configuration]$
 329   1      
 330   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 331   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 332   1      
 333   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 334   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 335   1      
 336   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 337   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 338   1      
 339   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 340   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 341   1      
 342   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 343   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 344   1      
 345   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 346   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 347   1      
 348   1              // $[ADC0CN0 - ADC0 Control 0]
 349   1              /***********************************************************************
 350   1               - Enable ADC0 
 351   1               ***********************************************************************/
 352   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED;
 353   1              // [ADC0CN0 - ADC0 Control 0]$
 354   1      
 355   1      }
 356          
 357          //================================================================================
 358          // CLOCK_0_enter_DefaultMode_from_RESET
 359          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 7   

 360          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 361   1              // $[HFOSC1 Setup]
 362   1              // [HFOSC1 Setup]$
 363   1      
 364   1              // $[CLKSEL - Clock Select]
 365   1              /***********************************************************************
 366   1               - Clock derived from the Internal High Frequency Oscillator 0
 367   1               - SYSCLK is equal to selected clock source divided by 1
 368   1               ***********************************************************************/
 369   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 370   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 371   1                      ;
 372   1              // [CLKSEL - Clock Select]$
 373   1      
 374   1      }
 375          
 376          //================================================================================
 377          // TIMER01_0_enter_DefaultMode_from_RESET
 378          //================================================================================
 379          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 380   1              // $[Timer Initialization]
 381   1              //Save Timer Configuration
 382   1              uint8_t TCON_save;
 383   1              TCON_save = TCON;
 384   1              //Stop Timers
 385   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 386   1      
 387   1              // [Timer Initialization]$
 388   1      
 389   1              // $[TH0 - Timer 0 High Byte]
 390   1              // [TH0 - Timer 0 High Byte]$
 391   1      
 392   1              // $[TL0 - Timer 0 Low Byte]
 393   1              // [TL0 - Timer 0 Low Byte]$
 394   1      
 395   1              // $[TH1 - Timer 1 High Byte]
 396   1              // [TH1 - Timer 1 High Byte]$
 397   1      
 398   1              // $[TL1 - Timer 1 Low Byte]
 399   1              // [TL1 - Timer 1 Low Byte]$
 400   1      
 401   1              // $[Timer Restoration]
 402   1              //Restore Timer Configuration
 403   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 404   1      
 405   1              // [Timer Restoration]$
 406   1      
 407   1      }
 408          
 409          //================================================================================
 410          // TIMER16_3_enter_DefaultMode_from_RESET
 411          //================================================================================
 412          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 413   1              // $[Timer Initialization]
 414   1              // Save Timer Configuration
 415   1              uint8_t TMR3CN0_TR3_save;
 416   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 417   1              // Stop Timer
 418   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 419   1              // [Timer Initialization]$
 420   1      
 421   1              // $[TMR3CN1 - Timer 3 Control 1]
 422   1              // [TMR3CN1 - Timer 3 Control 1]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 8   

 423   1      
 424   1              // $[TMR3CN0 - Timer 3 Control]
 425   1              // [TMR3CN0 - Timer 3 Control]$
 426   1      
 427   1              // $[TMR3H - Timer 3 High Byte]
 428   1              /***********************************************************************
 429   1               - Timer 3 High Byte = 0xF8
 430   1               ***********************************************************************/
 431   1              TMR3H = (0xF8 << TMR3H_TMR3H__SHIFT);
 432   1              // [TMR3H - Timer 3 High Byte]$
 433   1      
 434   1              // $[TMR3L - Timer 3 Low Byte]
 435   1              /***********************************************************************
 436   1               - Timer 3 Low Byte = 0x06
 437   1               ***********************************************************************/
 438   1              TMR3L = (0x06 << TMR3L_TMR3L__SHIFT);
 439   1              // [TMR3L - Timer 3 Low Byte]$
 440   1      
 441   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 442   1              /***********************************************************************
 443   1               - Timer 3 Reload High Byte = 0xF8
 444   1               ***********************************************************************/
 445   1              TMR3RLH = (0xF8 << TMR3RLH_TMR3RLH__SHIFT);
 446   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 447   1      
 448   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 449   1              /***********************************************************************
 450   1               - Timer 3 Reload Low Byte = 0x06
 451   1               ***********************************************************************/
 452   1              TMR3RLL = (0x06 << TMR3RLL_TMR3RLL__SHIFT);
 453   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 454   1      
 455   1              // $[TMR3CN0]
 456   1              /***********************************************************************
 457   1               - Start Timer 3 running
 458   1               ***********************************************************************/
 459   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 460   1              // [TMR3CN0]$
 461   1      
 462   1              // $[Timer Restoration]
 463   1              // Restore Timer Configuration
 464   1              TMR3CN0 |= TMR3CN0_TR3_save;
 465   1              // [Timer Restoration]$
 466   1      
 467   1      }
 468          
 469          //================================================================================
 470          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 471          //================================================================================
 472          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 473   1              // $[CKCON0 - Clock Control 0]
 474   1              /***********************************************************************
 475   1               - System clock divided by 48
 476   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 477   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 478   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 479   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 480   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 481   1               - Timer 1 uses the system clock
 482   1               ***********************************************************************/
 483   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 484   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 485   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 9   

 486   1                              | CKCON0_T1M__SYSCLK;
 487   1              // [CKCON0 - Clock Control 0]$
 488   1      
 489   1              // $[CKCON1 - Clock Control 1]
 490   1              // [CKCON1 - Clock Control 1]$
 491   1      
 492   1              // $[TMOD - Timer 0/1 Mode]
 493   1              /***********************************************************************
 494   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 495   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 496   1               - Timer Mode
 497   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 498   1               - Timer Mode
 499   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 500   1               ***********************************************************************/
 501   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 502   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 503   1              // [TMOD - Timer 0/1 Mode]$
 504   1      
 505   1              // $[TCON - Timer 0/1 Control]
 506   1              /***********************************************************************
 507   1               - INT0 is edge triggered
 508   1               - INT1 is edge triggered
 509   1               - Start Timer 0 running
 510   1               ***********************************************************************/
 511   1              TCON |= TCON_IT0__EDGE | TCON_IT1__EDGE | TCON_TR0__RUN;
 512   1              // [TCON - Timer 0/1 Control]$
 513   1      
 514   1      }
 515          
 516          //================================================================================
 517          // SPI_0_enter_DefaultMode_from_RESET
 518          //================================================================================
 519          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 520   1              // $[SPI0CKR - SPI0 Clock Rate]
 521   1              /***********************************************************************
 522   1               - SPI0 Clock Rate = 0x0B
 523   1               ***********************************************************************/
 524   1              SPI0CKR = (0x0B << SPI0CKR_SPI0CKR__SHIFT);
 525   1              // [SPI0CKR - SPI0 Clock Rate]$
 526   1      
 527   1              // $[SPI0CFG - SPI0 Configuration]
 528   1              /***********************************************************************
 529   1               - Enable master mode. Operate as a master
 530   1               ***********************************************************************/
 531   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 532   1              // [SPI0CFG - SPI0 Configuration]$
 533   1      
 534   1              // $[SPI0PCF - SPI0 Pin Configuration]
 535   1              // [SPI0PCF - SPI0 Pin Configuration]$
 536   1      
 537   1              // $[SPI0CN0 - SPI0 Control]
 538   1              /***********************************************************************
 539   1               - Enable the SPI module
 540   1               - 3-Wire Slave or 3-Wire Master Mode
 541   1               ***********************************************************************/
 542   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 543   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 544   1              // [SPI0CN0 - SPI0 Control]$
 545   1      
 546   1              // $[SPI0FCN0 - SPI0 FIFO Control 0]
 547   1              // [SPI0FCN0 - SPI0 FIFO Control 0]$
 548   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 10  

 549   1              // $[SPI0FCN1 - SPI0 FIFO Control 1]
 550   1              // [SPI0FCN1 - SPI0 FIFO Control 1]$
 551   1      
 552   1      }
 553          
 554          //================================================================================
 555          // INTERRUPT_0_enter_DefaultMode_from_RESET
 556          //================================================================================
 557          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 558   1              // $[EIE1 - Extended Interrupt Enable 1]
 559   1              /***********************************************************************
 560   1               - Disable ADC0 Conversion Complete interrupt
 561   1               - Disable ADC0 Window Comparison interrupt
 562   1               - Disable CP0 interrupts
 563   1               - Disable CP1 interrupts
 564   1               - Disable all Port Match interrupts
 565   1               - Disable all PCA0 interrupts
 566   1               - Disable all SMB0 interrupts
 567   1               - Enable interrupt requests generated by the TF3L or TF3H flags
 568   1               ***********************************************************************/
 569   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 570   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 571   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__ENABLED;
 572   1              // [EIE1 - Extended Interrupt Enable 1]$
 573   1      
 574   1              // $[EIE2 - Extended Interrupt Enable 2]
 575   1              // [EIE2 - Extended Interrupt Enable 2]$
 576   1      
 577   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 578   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 579   1      
 580   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 581   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 582   1      
 583   1              // $[EIP2 - Extended Interrupt Priority 2]
 584   1              // [EIP2 - Extended Interrupt Priority 2]$
 585   1      
 586   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 587   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 588   1      
 589   1              // $[IE - Interrupt Enable]
 590   1              /***********************************************************************
 591   1               - Disable all interrupt sources
 592   1               - Enable interrupt requests generated by the INT0 input
 593   1               - Enable interrupt requests generated by the INT1 input
 594   1               - Enable interrupt requests generated by SPI0
 595   1               - Enable interrupt requests generated by the TF0 flag
 596   1               - Disable all Timer 1 interrupt
 597   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 598   1               - Disable UART0 interrupt
 599   1               ***********************************************************************/
 600   1              IE = IE_EA__DISABLED | IE_EX0__ENABLED | IE_EX1__ENABLED | IE_ESPI0__ENABLED
 601   1                              | IE_ET0__ENABLED | IE_ET1__DISABLED | IE_ET2__ENABLED
 602   1                              | IE_ES0__DISABLED;
 603   1              // [IE - Interrupt Enable]$
 604   1      
 605   1              // $[IP - Interrupt Priority]
 606   1              // [IP - Interrupt Priority]$
 607   1      
 608   1              // $[IPH - Interrupt Priority High]
 609   1              // [IPH - Interrupt Priority High]$
 610   1      
 611   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        04/24/2017 14:44:46 PAGE 11  

 612          
 613          extern void EXTINT_0_enter_DefaultMode_from_RESET(void) {
 614   1              // $[IT01CF - INT0/INT1 Configuration]
 615   1              /***********************************************************************
 616   1               - INT0 input is active low
 617   1               - Select P0.2
 618   1               - INT1 input is active low
 619   1               - Select P0.3
 620   1               ***********************************************************************/
 621   1              IT01CF = IT01CF_IN0PL__ACTIVE_LOW | IT01CF_IN0SL__P0_2
 622   1                              | IT01CF_IN1PL__ACTIVE_LOW | IT01CF_IN1SL__P0_3;
 623   1              // [IT01CF - INT0/INT1 Configuration]$
 624   1      
 625   1      }
 626          
 627          extern void RSTSRC_0_enter_DefaultMode_from_RESET(void) {
 628   1              // $[RSTSRC - Reset Source]
 629   1              /***********************************************************************
 630   1               - A power-on or supply monitor reset did not occur
 631   1               - A missing clock detector reset occurred
 632   1               - A Comparator 0 reset did not occur
 633   1               ***********************************************************************/
 634   1              RSTSRC = RSTSRC_PORSF__NOT_SET | RSTSRC_MCDRSF__SET
 635   1                              | RSTSRC_C0RSEF__NOT_SET;
 636   1              // [RSTSRC - Reset Source]$
 637   1      
 638   1      }
 639          
 640          extern void TIMER16_4_enter_DefaultMode_from_RESET(void) {
 641   1      
 642   1      }
 643          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    204    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
