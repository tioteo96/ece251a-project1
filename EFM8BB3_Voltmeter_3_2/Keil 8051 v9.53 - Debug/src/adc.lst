C51 COMPILER V9.53.0.0   ADC                                                               04/24/2017 14:44:46 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\src\adc.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\student
                    -\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_2\src\adc.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) 
                    -FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\student\SimplicityStudio\v4
                    -_workspace\EFM8BB3_Voltmeter_3_2\inc\graphics;C:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_2\inc;C
                    -:\Users\student\SimplicityStudio\v4_workspace\EFM8BB3_Voltmeter_3_2\inc\config;C:/SiliconLabs/SimplicityStudio/v4/develo
                    -per/sdks/8051/v4.0.3//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/EFM8BB3_SLSTK2
                    -022A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/peripheral_driver/inc;C:/Silic
                    -onLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_joystick;C:/SiliconLabs/SimplicityStudio
                    -/v4/developer/sdks/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdk
                    -s/8051/v4.0.3//kits/common/drivers/efm8_memory_lcd/inc/graphics;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v
                    -4.0.3//kits/common/drivers/efm8_memory_lcd/inc/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Dev
                    -ice/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.3//Device/EFM8BB3/inc) PRINT(.\src\adc
                    -.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\adc.OBJ)

line level    source

   1          /**************************************************************************//**
   2           * Copyright (c) 2015 by Silicon Laboratories Inc. All rights reserved.
   3           *
   4           * http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   5           *****************************************************************************/
   6          /////////////////////////////////////////////////////////////////////////////
   7          // adc.c
   8          /////////////////////////////////////////////////////////////////////////////
   9          
  10          
  11          /////////////////////////////////////////////////////////////////////////////
  12          // Includes
  13          /////////////////////////////////////////////////////////////////////////////
  14          
  15          #include "adc.h"
  16          #include "joystick.h"
  17          
  18          
  19          /////////////////////////////////////////////////////////////////////////////
  20          // Globals
  21          /////////////////////////////////////////////////////////////////////////////
  22          
  23          uint32_t mV; // Measured voltage in mV
  24          
  25          /////////////////////////////////////////////////////////////////////////////
  26          // Functions
  27          /////////////////////////////////////////////////////////////////////////////
  28          
  29          uint32_t ADC_GetVoltage(void)
  30          {
  31   1        uint32_t voltage;
  32   1        EIE1 &= ~EIE1_EADC0__BMASK; // Disable ADC end of conversion interrupts
  33   1        voltage = mV;
  34   1        EIE1 |= EIE1_EADC0__BMASK;  // Enable ADC end of conversion interrupts
  35   1        return voltage;
  36   1      }
  37          
  38          /////////////////////////////////////////////////////////////////////////////
  39          // Interrupt Service Handlers
  40          /////////////////////////////////////////////////////////////////////////////
  41          
  42          //-----------------------------------------------------------------------------
  43          // ADC0EOC_ISR
  44          //-----------------------------------------------------------------------------
C51 COMPILER V9.53.0.0   ADC                                                               04/24/2017 14:44:46 PAGE 2   

  45          //
  46          // ADC0EOC ISR Content goes here. Remember to clear flag bits:
  47          // ADC0CN0::ADINT (Conversion Complete Interrupt Flag)
  48          //
  49          // This ISR averages ADC_MEASUREMENTS_TO_AVG samples then prints the result
  50          // to the terminal.  The ISR is called after each ADC conversion which is
  51          // triggered by Timer0.
  52          //
  53          //-----------------------------------------------------------------------------
  54          
  55          SI_INTERRUPT (ADC0EOC_ISR, ADC0EOC_IRQn)
  56          {
  57   1         static uint32_t accumulator = 0; // Accumulator for averaging
  58   1         static uint16_t measurements = ADC_MEASUREMENTS_TO_AVG; // Measurement counter
  59   1      
  60   1         uint32_t result = 0;
  61   1      
  62   1         ADC0CN0_ADINT = 0; // Clear ADC0 conv. complete flag
  63   1      
  64   1         accumulator += ADC0;
  65   1         measurements--;
  66   1      
  67   1         if(measurements == 0)
  68   1         {
  69   2            measurements = ADC_MEASUREMENTS_TO_AVG;
  70   2            result = accumulator / ADC_MEASUREMENTS_TO_AVG;
  71   2            accumulator = 0;
  72   2      
  73   2            // The 10-bit ADC value is averaged across
  74   2            // ADC_NUM_MEASUREMENTS_TO_AVG measurements.
  75   2            // The measured voltage applied to input is then:
  76   2            //
  77   2            //                          Vref (mV)
  78   2            //   measurement (mV) =  ---------------- * result (bits)
  79   2            //                        (2^10)-1 (bits)
  80   2      
  81   2            mV =  (result * ADC_VREF_MV) / 1023;
  82   2         }
  83   1      }
  84          
  85          
  86          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
